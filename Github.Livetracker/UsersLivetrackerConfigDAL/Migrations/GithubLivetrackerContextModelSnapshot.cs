// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UsersLivetrackerConfigDAL;

namespace GithubLivetrackerDAL.Migrations
{
    [DbContext(typeof(GithubLivetrackerContext))]
    partial class GithubLivetrackerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("KeywordUser", b =>
                {
                    b.Property<int>("KeywordsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("KeywordsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("KeywordUser");
                });

            modelBuilder.Entity("UsersLivetrackerConfigDAL.Models.Keyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("UsersLivetrackerConfigDAL.Models.KeywordInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("KeywordId")
                        .HasColumnType("int");

                    b.Property<string>("RelativePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RepositoryUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ShaHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("WasProcessed")
                        .HasColumnType("bit");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("KeywordId");

                    b.ToTable("KeywordInfos");
                });

            modelBuilder.Entity("UsersLivetrackerConfigDAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TokenHash")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KeywordUser", b =>
                {
                    b.HasOne("UsersLivetrackerConfigDAL.Models.Keyword", null)
                        .WithMany()
                        .HasForeignKey("KeywordsId")
                        .IsRequired();

                    b.HasOne("UsersLivetrackerConfigDAL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .IsRequired();
                });

            modelBuilder.Entity("UsersLivetrackerConfigDAL.Models.KeywordInfo", b =>
                {
                    b.HasOne("UsersLivetrackerConfigDAL.Models.Keyword", "Keyword")
                        .WithMany("KeywordInfos")
                        .HasForeignKey("KeywordId");

                    b.Navigation("Keyword");
                });

            modelBuilder.Entity("UsersLivetrackerConfigDAL.Models.Keyword", b =>
                {
                    b.Navigation("KeywordInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
